#!/usr/bin/env node

/**
 * Supabase Setup Helper Script
 * This script helps you configure your Supabase credentials
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

console.log('üöÄ betly - Supabase Setup');
console.log('================================\n');

console.log('This script will help you configure your Supabase credentials.');
console.log('You can find these values in your Supabase Dashboard ‚Üí Settings ‚Üí API\n');

rl.question('Enter your Supabase Project URL: ', (url) => {
  rl.question('Enter your Supabase Anon Key: ', (anonKey) => {
    
    // Validate inputs
    if (!url || !anonKey) {
      console.log('‚ùå Both URL and Anon Key are required!');
      rl.close();
      return;
    }

    if (!url.includes('supabase.co')) {
      console.log('‚ö†Ô∏è  Warning: URL doesn\'t look like a Supabase URL');
    }

    if (!anonKey.startsWith('eyJ')) {
      console.log('‚ö†Ô∏è  Warning: Anon Key doesn\'t look like a JWT token');
    }

    // Create config file
    const configContent = `// Supabase Configuration
// Generated by setup-supabase.js

export const SUPABASE_CONFIG = {
  url: '${url}',
  anonKey: '${anonKey}',
};
`;

    try {
      fs.writeFileSync(path.join(__dirname, 'config.ts'), configContent);
      console.log('\n‚úÖ Configuration saved to config.ts');
      console.log('\nüìã Next steps:');
      console.log('1. Run the SQL schema in your Supabase SQL Editor (see supabase-setup.sql)');
      console.log('2. Test your app: npm start');
      console.log('3. Open in Expo Go and try creating a bet');
      
    } catch (error) {
      console.log('‚ùå Error saving config:', error.message);
    }

    rl.close();
  });
});
